from pymilvus import connections, utility, Collection, DataType
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def check_vector_database(host: str = "localhost", port: str = "19530"):
    """
    Ki·ªÉm tra to√†n di·ªán vector database
    """
    try:
        # K·∫øt n·ªëi ƒë·∫øn Milvus
        connections.connect("default", host=host, port=port)
        logger.info("‚úÖ K·∫øt n·ªëi Milvus th√†nh c√¥ng")
        
        # L·∫•y danh s√°ch collections
        collections = utility.list_collections()
        logger.info(f"üìë T√¨m th·∫•y {len(collections)} collections")
        
        # Ki·ªÉm tra chi ti·∫øt t·ª´ng collection
        for coll_name in collections:
            collection = Collection(coll_name)
            collection.load()
            
            try:
                # Th√¥ng tin c∆° b·∫£n
                print(f"\nüîç Collection: {coll_name}")
                print(f"   ‚îú‚îÄ‚îÄ S·ªë l∆∞·ª£ng entities: {collection.num_entities}")
                print(f"   ‚îú‚îÄ‚îÄ Primary field: {collection.schema.primary_field.name}")
                
                # Th√¥ng tin v·ªÅ fields
                print("   ‚îú‚îÄ‚îÄ Fields:")
                for field in collection.schema.fields:
                    if field.dtype == DataType.FLOAT_VECTOR:
                        print(f"   ‚îÇ   ‚îú‚îÄ‚îÄ {field.name} (Vector dim={field.params['dim']})")
                    else:
                        print(f"   ‚îÇ   ‚îú‚îÄ‚îÄ {field.name} ({field.dtype})")
                
                # Th√¥ng tin v·ªÅ indexes
                print("   ‚îî‚îÄ‚îÄ Indexes:")
                for idx in collection.indexes:
                    print(f"       ‚îî‚îÄ‚îÄ {idx.field_name}: {idx.params}")
                    
            finally:
                collection.release()
                
    except Exception as e:
        logger.error(f"‚ùå L·ªói: {str(e)}")
        raise
    finally:
        connections.disconnect("default")

if __name__ == "__main__":
    check_vector_database()
